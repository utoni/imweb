name: Build

on:
  push:
    branches:
      - main
      - tmp
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  release:
    types: [created]

jobs:
  test:
    name: ${{ matrix.os }} ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    env:
      CMAKE_C_COMPILER: ${{ matrix.compiler }}
      CMAKE_C_FLAGS: -Werror
      EMSCRIPTEN_TOOLCHAIN_FILE: ./emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        include:
          - compiler: "gcc"
            cmake_options: -DBUILD_EXAMPLES=ON -DENABLE_LTO=ON -DENABLE_SANITIZER=ON -DSINGLE_LIBRARY=ON
          - compiler: "clang-12"
            cmake_options: -DBUILD_EXAMPLES=ON -DENABLE_LTO=OFF -DENABLE_SANITIZER=OFF -DSINGLE_LIBRARY=ON
          - compiler: "gcc-10"
            cmake_options: -DBUILD_EXAMPLES=ON -DENABLE_LTO=OFF -DENABLE_SANITIZER=OFF -DSINGLE_LIBRARY=OFF

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 1
      - name: Install Ubuntu Prerequisites
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install git cmake pkg-config libgl-dev libglfw3-dev freeglut3-dev
          sudo apt-get install ${{ matrix.compiler }}
      - name: Install EMSDK
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          git pull
          ./emsdk install latest
          ./emsdk activate latest
      - name: Configure imweb
        run: |
          cmake -S . -B ./build -DCMAKE_INSTALL_PREFIX=./install/${{ matrix.os }}_${{ matrix.compiler }} ${{ matrix.cmake_options }}
      - name: Build imweb
        run: |
          cmake --build ./build --verbose
      - name: Install imweb
        run: |
          cmake --install ./build
          tree ./install/${{ matrix.os }}_${{ matrix.compiler }}
          cd ./example3
          PKG_CONFIG_PATH=$(realpath ../install/${{ matrix.os }}_${{ matrix.compiler }}/lib/pkgconfig) cmake -S . -B ./${{ matrix.os }}_${{ matrix.compiler }}
          cmake --build ./${{ matrix.os }}_${{ matrix.compiler }} --verbose
      - name: Build script
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.compiler, 'gcc')
        run: |
          ./build.sh
